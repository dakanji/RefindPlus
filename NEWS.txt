0.14.0.AB (PRE-RELEASE):
-----------------------
- PENDING


0.14.0.AA (13 Jun 2023):
-----------------------
- Synced with Upstream v0.14.0
- Updates Deprecated EFI 1.x Protocols
  * Misc deprecated protocols aligned with UEFI 2.x specs
  * Some are related to filesystem drivers; for which updated versions are created accordingly
- Adds `HelpIcon` Feature
  * Improves loading speed by preferring the current theme's generic/default loader icons
  * Enabled by default but can be disabled using a new `decline_help_icon` configuration token
- Adds `GZippedLoaders` Feature
  * Stub implementation of upstream feature focused on the ARM architecture
- Adds Misc Upstream Changes/Fixes
  * Adoption of the RefindPlus `FollowSymlinks` Feature
  * `also_scan_dirs` Volume Specification Bugfix
    - https://sf.net/p/refind/code/ci/fde8116021e1c6ea7edaf3fae15fced47bbb38cf
    - https://sf.net/p/refind/discussion/general/thread/b411f33f37
  * Malformed `refind_linux.conf` Freeze Bugfix
    - https://sf.net/p/refind/code/ci/ebe510a5fcdc10fc04f90e0976c47de54b8c767e
  * Parallel FS Driver GNU-EFI Build Limitation
    - https://sf.net/p/refind/code/ci/dc211965727921bf8e9440fdab5e147795ce9584
  * Memory leak and garbled JPEG when compiled on some Linux distributions
    - https://sf.net/p/refind/code/ci/8825e5e815b4be3708edd7b8d9fa3ea658094d3b
  * Apparent Memory Allocation Conflict
    - https://sf.net/p/refind/code/ci/5e2d0ac3fb76a8daab3a8199d0b0c52dc792b84f
  * Upstream `LinuxPrefixes` Feature
    - https://sf.net/p/refind/code/ci/d5c0a48a01427ed7a3cb3eb324c59fb965358b1d
- Fixes `ReloadGOP` Feature
  * A regression had meant that the feature was not active
  * This bug was introduced in v0.13.3.AD (Commit dc642c6)
- Improves `SupplyNVME` Feature
  * Further isolated from other code
- Improves `SupplyAPFS` Feature
  * Now run after device connection to ensure APFS availability
  * This should also resolve availability with some third party flashed GPUs
- Improves `AcquireGOP` Feature
  * Now handles uncompressed OptionROMs
  * None encountered to date but theoretically possible
- Improves `AlsoScan` Feature
  * The `@root/boot` path was added to the default `also_scan_dirs` list
- Improves `DynamicCSR` Feature
  * Now also enables the `RotateCSR` tool if configured to be displayed
    - The tool was previously always disabled when DynamicCSR was active
  * Now attempts up to three (3) rotations
    - Some users have more than two (2) CSR settings
    - Stops at the first match of the target setting or after the third attempt
  * A screen message about `NormalisedCSR` was additionally suppressed
- Improves Generic Menu Handling
  * Now provides a `Return to Main Menu` option on all such menus
- Improves `OpenCore` Instance Handling
  * Now prevents loading OpenCore when RefindPlus is loaded via OpenCore
  * That is, prevents loading OpenCore when it is already active
- Improves `NvramProtect` and `NvramProtectEx` Features
  * Now disabled when RefindPlus is loaded via OpenCore
- Exposes `MitigatePrimedBuffer` Feature for User Configuration
  * Previously activated by default on all types of firmware
  * A limited base implementation is always active on Non-Apple firmware
  * Can now be extended on by activating a new `mitigate_primed_buffer` token
  * The feature does not operate on Apple firmware regardless of the token setting
- Amends Filesystem Drivers
  * BTRFS: Adds support for `RAID1C34` profiles
    - Ported from Grub2 via https://sf.net/p/refind/code/merge-requests/48
  * MISC: Tweaks driver name strings and other minor items
- Amends `Big Selection Image` Size Filtering
  * The maximum Big Selection image size is increased to 512px from 320px
  * The Small Selection image maximum is maintained at 256px
- Amends EFI File Validity Checks
  * Apple `Fat` Binaries are now always assumed to be valid on Apple firmware
  * This similarly applies to binaries with missing PE32+ headers


0.13.3.AD (07 Mar 2023):
-----------------------
- Fixes Manual Stanza SubMenuEntries
  * A memory conflict meant that including such entries resulted in RefindPlus hanging
- Fixes UGA Graphics
  * Addresses issue of `UGA-Only` GPUs being always forced into TextOnly mode
- Fixes Misc Alt Build Function Duplication Issues
  * Addresses issues reported using the build process at https://github.com/xaionaro/edk2-builder-docker
    - Updates `LodePNG` to Version 20221108
    - Deduplicates `DebugLog` function and aligns calling convention
- Fixes `Forced Default` Config Settings
  * Forced Defaults, typically based on firmware type, could be skipped under some circumstances
  * This gap has now been closed
- Fixes Invalid `ShowTools` Entry Handling
  * Such invalid entries were previously only flagged and not actually handled
  * These are now additionally skipped
- Improves `DefaultSelection` Feature
  * A substring match is now only attempted if an exact match fails
- Improves CSR Handling
  * Multiple tweaks to improve handling CSR settings
  * Removes Limitation of `DynamicCSR` Feature to Apple Firmware
  * `DynamicCSR` also now runs whenever RefindPlus is loaded and not just when specific loaders are started
- Improves `System Shutdown/Restart` Handling
  * Now displays a confirmation input screen before execution
- Improves Misc Graphics Handling
  * Improves graphics related memory management
  * Improves UGA support via new `PassGopThrough` feature (Not user configurable)
- Amends `Selection Image` Size Filtering
  * The maximum Big Selection image size is increased to 320px from 256px
  * The Small Selection image maximum is maintained at 256px
  * The default selection image is now used when a defined image cannot be found
    - Previously used a scaled version of the small image when the big one was missing
- Amends `Invalid UEFI Versions` Handling
  * Now accounts for such by reducing the amendment threshold to UEFI 2.0
  * Still amends to UEFI 2.3 when UEFI amendments happen
  * No longer amends Runtime Services for UEFI amendments
  * No longer disables certain features on detecting inconsistent versions
  * No longer displays a warning messages and the discrepancy is only logged
  * Fixes Memory Conflict in 'Invalid EFI Versions' Debug Logging
    - The DBG build had an invalid memory allocation instance
    * This resulted in RefindPlus hanging when logging detection of such
- Amends and Refactors Misc Items
  * General optimisation
  * Memory management improvements and fixes
  * Log file handling tweaks
- Amends `ScanAllESP` Feature
  * Now aligned with upstream implementation and scans all ESPs by default
  * Hence, the "Opt-Out" `decline_esp_filter` token is replaced by the "Opt-In `enable_esp_filter`
  * A previous issue where the token operated the wrong way round has been fixed


0.13.3.AC (06 Dec 2022):
-----------------------
- Adds `NvramProtectEx` Feature
  * Extends the `NvramProtect` feature (if set) to Mac OS and `Unknown` UEFI boots
  * The feature can be enabled using a new `nvram_protect_ex` configuration token
    - Replaces the `FocusNvramFix` feature which has been removed
    - Essentially restores functionality from `EnableMacosFilter` previously replaced by `FocusNvramFix`
- Fixes `QueryVariableInfo` Handling
  * Now properly handled on `UEFI-Mac` units
  * The output is not currently presented however as Apple firmare does not return accurate information
- Fixes Misc Static Analysis Flags
  * Some are related to filesystem drivers; for which updated versions are created accordingly
- Improves 'SetVariable' Hook/Event Handling
  * Misc improvements including improved memory management
  * Relevant to the `NvramProtect` feature
- Improves Mac Recovery Tool Scan
  * Now skips some invalid entries such as APFS Recovery partitions
- Improves ScreenShot Feature
  * Now clears the keystroke buffer in `egScreenShot` to mitigate against stuck keys
- Improves Clean NVRAM Feature
  * Particularly regarding clearing OpenCore related variables
- Improves Time Bound Primed Buffer Mitigation
  * Rationalises intervention threshold
- Improves UI Element Scaling
  * Some units use a low resolution display for the boot stage that result in distorted UI
  * RefindPlus can now detect this and automatically scale UI elements down accordingly
  * Alternatively, users can use the `scale_ui` token to scale UI elements down
  * The threshold below which the display is considered `LoRez` is 1025px
  * Ensures correct icon scales are maintained on `RescanAll` calls
- Amends `SupplyNVME` and `SupplyUEFI` Features
  * No longer supplied by default but when specifically activated
  * Hence, the "Opt-Out" `decline_nvme_load` token has been replaced by an "Opt-In `supply_nvme` token
  * The "Opt-Out" `decline_uefi_emulate` token has also been replaced by an "Opt-In `supply_uefi` token
  * A previous failure to be activated when NVME support was absent has been fixed
- Renames Misc Configuration Tokens
  * `decline_tags_help` to `decline_help_tags`
  * `decline_text_help` to `decline_help_text`


0.13.3.AB (06 Sep 2022):
-----------------------
- Adds `PreferUGA` Feature
  * Sets RefindPlus to always use UGA for its graphics output when available
    - The default is to use GOP and to fall back on UGA when GOP is not available
  * The feature can be enabled using a new `prefer_uga` configuration token
- Adds `FollowSymlinks` Feature
  * Allows following symbolic links to loaders
  * These are otherwise ignored to avoid misc issues but made be useful to run some Linux setups
  * The feature can be enabled using a new `follow_symlinks` configuration token
- Adds `FocusNvramFix` Feature
  * Focuses the `ProtectNVRAM` feature (if set) on explicit UEFI Windows boots
  * The feature can be enabled using a new `focus_nvram_fix` configuration token
    - Replaces the `EnableMacosFilter` feature which has been removed
- Fixes Unwanted APFS Data Volume Entries
  * APFS data volumes could sometimes appear as boot options due to inadequate filtering
- Fixes SubScreen Boots
  * Boots from subscreens, such as after pressing F2, were handled as generic UEFI files
  * This resulted in some processes being skipped or unwanted processes being applied
  * RefindPlus now tries to make such boots specific as follows:
    - `Opencore`, `Clover`, `Linux`, `MacOS`, `Windows` and `Misc Others`
- Fixes Apple Hardware Test Option
  * While Apple stopped providing this feature after June 2013, some users may have restored this
    - Ref: https://github.com/upekkha/AppleHardwareTest
  * In such cases however, RefindPlus did not provide the option on APFS volumes when `SyncAPFS` is active
  * Now reinstated subject to not having multiple MacOS instances in any single APFS container
- Fixes Misc Items
  * Always block UEFI Windows NVRAM items (Disregard Volatility)
  * Address misidentification of certain volume types as HFS+ volumes
  * Address misplaced `Out` and `Return` log tags
  * Eliminate excessive pointer event logging
  * Eliminate python script code smells
- Improves `System Reset Call` Fix
  * Was previously always active when on system reboot calls
  * This meant such calls always required confirmation
  * Such confirmations are no longer required if keypresses had taken place before the call
  * Hence all legitimate calls now proceed without issue and buffered keystroke calls are also captured
- Improves FS Type Handling
  * Prevents Windows Support Volumes from being offered as boot options
  * Updates Volume `FS_TYPE` setting to match assumed types
  * Differentiates between HFS+ types
- Improves Time Bound Primed Buffer Mitigation
  * Reduces intervention threshold based on detection of confirmed user key presses
- Amends the `ShouldScan` Function to Exclude HFS+ `Recovery HD` Volumes
  * This recovery functionality was meant to be handled by the Mac Recovery Tool
- Amends the `WarnIfLegacyProblems` Function Run Position
  * Now runs after the `SetupScreen` function to ensure screen display on issues
- Amends EFI Scan to Exclude BOOTCAMP
  * BootCamp creates HybridMBR disks and trigger redundant attempts to find EFI loaders
- Ports Downstream Directory Scan Iteration Fix
  * Ref: https://github.com/joevt/RefindPlus/commit/8d03f987ce544869d275d0bd31cd1eb9b5939891


0.13.3.AA (06 Jun 2022):
-----------------------
- Synced with Upstream v0.13.3
- Adds `EnableMacosFilter` Feature
  * This feature is active by default and activates the `ProtectNVRAM` feature, if enabled, on MacOS boots
  * The `ProtectNVRAM` feature, if enabled, is activated for other applicable OS types regardless
  * The `EnableMacosFilter` feature can be disabled using a new `decline_macos_filter` configuration token
- Adds `DisableNvramPanicLog` Feature
  * Sets a MacOS `nvram_paniclog=0` boot argument to disable kernel panic logging to NVRAM
  * Replaces the `PanicFilter` feature which has been removed
- Adds `NvramVariableLimit` Feature
  * Filters NVRAM variable write attempts
  * Variables larger than a specified size are discarded
  * This is activated by a new `nvram_variable_limit` configuration token
- Adds `DecoupleKeyF10` Feature
  * Unlinks the `F10` key from the built in screenshot feature
  * Allows the use of 3rd party screenshot tools that also map the `F10` key
  * The `\` (forward slash) key remains linked to the built in screenshot feature
  * This is activated by a new `decouple_key_f10` configuration token
- Fixes `DisableAMFI` Feature
  * The feature had been disabled under some circumstances
  * This bug was introduced in v0.13.2.AP (Commit 8705fdb)
- Improves `HandleSignedInt` Function
  * Ensures the function always returns a negative value when required
- Improves `FindMenuShortcutEntry` Function
  * Now initially tries a exact match of the stored string against available entries
  * A match against substrings is only tried if an exact match is not found
- Improves Pointer Device Handling
  * Applies workaround for touch mode failure
    - Ref: https://sf.net/p/refind/discussion/general/thread/86f80fa8ef
  * Rationalises pointer priority with `EnableTouch` always having priority over `EnableMouse`
    - Previously depended on order of appearance in configuration file
- Renames Misc Configuration Tokens
  * `decline_nvramprotect` to `decline_nvram_protect`
  * `decline_uefiemulate` to `decline_uefi_emulate`
  * `decline_espfilter` to `decline_esp_filter`
  * `decline_apfsload` to `decline_apfs_load`
  * `decline_apfsmute` to `decline_apfs_mute`
  * `decline_apfssync` to `decline_apfs_sync`
  * `decline_nvmeload` to `decline_nvme_load`
  * `decline_tagshelp` to `decline_tags_help`
  * `decline_texthelp` to `decline_text_help`
  * `decline_applefb` to `decline_apple_fb`


0.13.2.AP (19 Apr 2022):
-----------------------
- Adds `PanicFilter` Feature
  * RefindPlus now discards NVRAM write attempts of kernel panic information by default
  * Can be disabled using a new `decline_panicfilter` configuration token
  * Currently limited to when directly booting MacOS from RefindPlus
- Adds `SupplyAppleFB` Feature
  * Attempts to provide AppleFramebuffers on Macs when absent under certain circumstances
  * Can be disabled using a new `decline_applefb` configuration token
- Adds `TextHelp` Feature
  * Uses complementary text colours to improve legibility
  * Can be disabled using a new `decline_texthelp` configuration token
    - Only when using a custom title banner
    - Always on when using the default title banner
- Adds `IconRowMove` Feature
  * Allows repositioning the icon row position on the RefindPlus screen
    - Sometimes needed when icons block parts of custom banners
  * Base position can be specified using a new `icon_row_move` configuration token
- Adds `IconRowTune` Feature
  * Allows adjustments to the `IconRowMove` position
  * Offset value can be specified using a new `icon_row_tune` configuration token
- Adds `RansomDrives` Feature
  * Some types of firmware, notably on HP Notebooks, may lock some partitions
    - This renders them inaccessible or may even lead to RefindPlus hanging
  * Such partitions can be unlocked by setting a new `ransom_drives` configuration token
  * This option is currently always disabled on Apple firmware
- Adds `RescanDXE` Feature
  * Controls scanning for newly revealed DXE drivers when connecting handles
    - Switch ON or OFF with a new `disable_rescan_dxe` configuration token
  * This was previously done by default but may negatively impact loading speed
  * Typically only required when running non-native filesystems
- Adds `DriverPriority` Feature
  * Asigns a higher priority to drivers loaded by RefindPlus
  * Ensures that such are loaded when other similar drivers exist (mainly in the firmware)
  * Currently tied to the `RansomDrives` Feature and only activated when that feature is active
- Adds `HaltSeconds` Function
  * Works as `PauseSeconds` does, but does not terminate on keypress
- Fixes Unicode Collation
  * Now checks for and uses Unicode Collation Protocol instances that support English
  * Previously simply selected the first instance found (Inherited)
  * This should allow proper support for languages using unicode text
- Improves UEFI Runtime Function Wrapping
  * The wrapped UEFI Runtime `SetVariable` function is now better managed
- Improves `TransientBoot` Feature
  * Now removes pre-existing `PreviousBoot` instances when booting with this option set
- Improves `DirectBoot` Feature
  * Previously failed when a keyboard was not connected
  * Minimises screen shudder when the `ESC` key is held down to override DirectBoot
- Improves `ScreenShot` Feature
  * Properly limited to one (1) sreenshot per keypress
    - Removes limitation of the keypress not continuing beyond the on-screen message display
  * Fixes Screenshots being only functional for the main RefindPlus screen
    - This bug was introduced in v0.13.2.AN (Commit 99da7ce)
- Improves `HandleSignedInt` Function
  * Removed limitation on handled values
- Improves `egDisplaymessage` Function
  * Now includes option to pause in the function
    - Previously needed a separate call
  * Now erases the message after the display (if a pause is invoked)
    - Previously only properly erased when called on the main screen
    - The erasure was however also lost on the main screen when `IconRowMove` and/or `IconRowTune` is active
    - Now fixed for all screens but artefacts may result with some custom banners
- Improves `CleanNvram` Feature
  * The Emulated NVRAM on the filesystem is now also cleared
  * Now triggers NVRAM garbage collection on Macs when run
    - This is an equivalent of manually setting `nvram ResetNVRam=1`
- Improves `ProtectNVRAM` Feature
  * Adds `rEFIt Variant` to UEFI Loaders filtered for `ProtectNVRAM`
    - Made up of `RefindPlus`, `rEFIt` and `rEFInd` files chain-loaded from named locations
    - The ProtectNVRAM feature is not enabled for such loaders
  * Now checks new NVRAM write entries against existing entries
    - Only updates the entries when absent or different
    - Filtering these reduces NVRAM writes and associated wear and tear
  * Expands blocked SecureBoot related items
  * Now clears existing instances of blocked variables
  * Adds `UnlockID` and `UnlockIDCopy` to filtered items
    - These are not certificates but work in concert with the certificates
    - Hence, not required once certificates are filtered
    - Filtering these reduces NVRAM writes and associated wear and tear
  * Filters out the Current OEM Policy from post-block clean up
    - Removal may have negative impact on UEFI-PC
    - Not strictly needed as ProtectNVRAM is currently limited to Apple Firmware
    - Considered best to add a filter now in case that changes in future
- Improves Identification of Linux Instances
  * `vmlinuz`, `bzImage`, and `kernel` loaders are now accounted for as Linux loaders
  * The `ProtectNVRAM` feature is now not applied to such loaders
  * The `grub` loader was already accounted for
- Improves OS Boot Filtering
  * The `OSType` flag is now taken into account
- Improves Load Error/Warning Display
  * The `ContinueOnWarning` feature is forced on temporarily if required
- Improves Time Bound Primed Buffer Mitigation
  * Mitigates against RefindPlus spontaneously running default items
  * Intervention is based on a rising threshold based on build type and presence of Apple firmware
  * Also doubles threshold time when external disks are detected
    - The issue appears to be worse when such disks are connected
- Removes `BootKicker` feature
  * The feature was added as part of attempts to provide the RefindPlus screen on MacPro5,1
  * This was ultimately achieved via other means but the feature was maintained for potential benefits
  * The feature never actually worked properly however, hence the removal
- Amends GOP Mode Selection Preference
  * RefindPlus defaults to selecting the maximum resolution GOP Mode when a screen resolution is not specified
  * When two modes have the same resolution, the later mode was used
  * This is now changed to prefer the first mode found
- Amends OpenProtocol Remapping on Macs without AppleFramebuffers
  * The remapping is now disabled when GOP is absent on any type of firmware
  * It is now also disabled when AppleFramebuffers are absent on Apple firmware
  * This is to avoid potential memory management issues pending further investigation
- Amends Default Loader Scan for APFS Support Volumes
  * APFS `Recovery`, `Update` and `VM` volumes are now added to the `DontScanVolume` list by default
- Amends Scan for `.VolumeIcons` and `VolumeBadges`
  * Volumes in the `DontScanVolume` list are now skipped
- Amends System Table Reallocations
  * No longer copies memory for system table reallocations
  * Some Mac models fail to boot with this following recent firmware updates
  * Other recent changes to RefindPlus may have also affected booting 'FileVault' encrypted volumes
- Amends 'HandleProtocol' Stashing
  * No longer stashes and restores HandleProtocol on 'OcProvideConsoleGop' call
- Renames the `SilentBoot` Feature as `DirectBoot`
  * This more accurately describes the feature.
- Renames Misc Tokens to Permit Grouping of Related Tokens
  * The `uga_pass_through` token is renamed as `pass_uga_through`
  * The `XYZ_hidden_icons` tokens are renamed as `hidden_icons_XYZ`
  * The `XYZ_renderer` tokens are renamed as `renderer_XYZ`
- Extends fixes on Mac Recovery Implementation for MacOS on APFS
  * Adjusted to cover all MacOS instances on APFS
  * APFS Recovery Volumes are handled as Mac Recovery Tools and not as volumes with loaders
  * IMPORTANT:
    - This implementation is still a work in progress ... feedback required/welcome


0.13.2.AN (08 Feb 2022):
-----------------------
- Multiple Misc Stability Fixes
  * Major refactoring and restructuring for improved stability
  * Also applied to filesystem drivers
- Adds `SupplyUEFI` Feature
  * Adds an implementation of the `CreateEventEx` feature to EFI 1.x units
  * Additionally, the EFI Revision is modified to present as UEFI 2.3
  * This allows the use of UEFI 2.x tools and drivers on Legacy EFI 1.x units in many cases
  * This is particularly the case on Legacy Macs, which already have amended EFI 1.x implementations
  * This functionality can be disabled by setting the `decline_uefiemulate` token
  * As an aside, the `RuntimeServices` table is now also amended in `AmendSysTable`
- Adds `SilentBoot` Feature
  * RefindPlus inherited a mode where a default selection was run after an instant timeout
  * A shortcut key for a loader could also be pressed to run that particular loader instead
  * This mode is activated by setting the `timeout` config token to `-1`
  * However, the RefindPlus screen was briefly loaded before the target option was run
    - This created an unwanted screen flash and also removed the BGRT logo
  * The default selection is now run without showing the screen at all instead (Based on an upstream update)
  * The mode is now truly silent as there is no video output unless overriden (BGRT logos are maintained)
    - Override is initiated by holding down the `ESC` key immediately after starting RefindPlus
    - Shortcut keys can also be pressed
      * In such cases, the loader associated with the key will be run instead of the default
      * There will be no video output by RefindPlus similar to the default case
- Fixes Forced `TextRenderer`
  * The `TextRenderer` feature is forced on in certain circumstances to enable text mode support
  * This appears to have resulted in conflicts on some Macs following a firmware update
  * The firmware update appears to have made changes to screen mode settings
  * The forced activation has been amended to avoid this issue
- Fixes SystemTable Restoration
  * The code was previously not operational
  * This has now been fixed but is now limited to when `SupplyUEFI` is inactive
- Fixes Major Memory Conflict
  * An item had been wrongly freed and resulted in random crashes when running loaders
  * This bug was introduced in v0.13.2.AC (Commit 6ed58c5)
- Fixes `DontScanVolumes` for Synced APFS Instances
  * Limited to Single Instance APFS Containers
- Fixes Reported LodePNG Name Collisions
  * This apparently affected Docker builds on Linux
- Amends Handling of Inconsistent EFI Versions
  * RefindPlus now disables all functionality involving UEFI element changes when this is detected
  * A detection of inconsistent EFI versions suggests RefindPlus has been chain-loaded
  * This is most likely to be as a result of chain-loading from OpenCore with `ForgeUefiSupport` set
  * The disabled features can typically also be set in OpenCore
- Improves `ProtectNVRAM` Implementation
  * RefindPlus classifies UEFI Loaders into one of the following categories:
    - `Opencore`, `Clover`, `Linux`, `MacOS`, `Windows` and `Others`
  * Only security certificates generated by Windows UEFI Loaders were blocked by ProtectNVRAM
  * However, UEFI Windows installers/updaters may fall into the `Others` category and generate such certificates
  * Hence, certificates generated by UEFI Loaders that fall into the `Others` category are now also blocked
    - The feature remains only active on Apple firmware
    - Can be disabled by setting the `decline_nvramprotect` token
- Improves `SyncAPFS` Implementation
  * The presence of valid VolUUID and PartGUID is now taken into account
  * SyncAPFS is disabled if either has a `NULL` Guid value
- Improves Screenshot Feature
  * Feedback on success/failure is given via on-screen messages
  * Each press of the `F10` key now results in only one image being saved
    - This is subject to the key press not continuing beyond the on-screen message display
- Improves Memory Management
  * Multiple memory management improvements
- Improves Build Process
  * RELEASE builds are further optimised
    - The `MDEPKG_NDEBUG` EDK2 functionality is leveraged to:
      * Reduce file size
      * Ensure consistent files on different builds
        - EDK2 otherwise only guarantees functional consistency
        - This now enforces additional structural consistency
        - Builds with different file paths will now be the same
  * Calls to `ASSERT`, and similar, are activated on DEBUG Builds
    - Failed `ASSERT` calls put RefindPlus into a Deadloop
  * Enables `NOOPT` Build Target
    - This is a debug build with compile time optimisation items disabled
    - Log Level 2 is only exposed on this build target
  * The `REFIT_DEBUG` define has been converted to a compiler option
    - The constant is no longer defined in `global.h` and is now set in `RefindPlus.inf` instead
    - This change removes the need for compile time edits to set build targets
    - The requirements are now managed transparently by the build process itself
  * The various `*.inf` files for filesystem drivers etc, have been standardised
    - These now follow a clearer standard format
- Renames the `ignore_previous_boot` config option as `transient_boot`
  * This more accurately describes the feature.
    - The current boot selection is not saved, it becomes transient, but any previously saved boot is set as the default


0.13.2.AM (13 Dec 2021):
-----------------------
- Reverts Ported APFS Volume Group Identification
  * Does not appear the Volume Group information was correctly isolated and hence, not unique
  * This resulted in MacOS volume instance conflicts
  * NOTE: Multi Instance APFS Container restrictions apply again


0.13.2.AL (12 Dec 2021):
-----------------------
- Adds `ExternalHiddenIcons` Feature
  * Sets RefindPlus to also scan external volumes for `.VolumeIcon` icons
  * This is a port of the downstream `AllHiddenIcons` feature by GitHub user @Joevt
  * Amended and renamed to reflect the target disk kind
- Improves `ScreenRGB` Feature
  * The handling of the embedded title banner has been improved by leveraging transparency
  * This significantly reduces the overall file size and ensures backgrounds are fully matched
  * This is a port of the downstream implementation by GitHub user @Joevt
- Fixes `BootKicker` and `CleanNvram` Amongst Others
  * Misc memory management defects had disabled both
- Fixes for `BTRFS` and `NTFS` Filesystem Drivers from GitHub user @Joevt
  * BTRFS: Fixes file creation date bug
  * NTFS: Fixes file creation date bug
  * NTFS: Fixed `attribute_sparse` and `attribute_encrypted` which were not testing those flags correctly
    - The field is a USHORT (Unsigned 16-bit integer) but was handled as a BYTE (Unsigned 8-bit integer)
  * NTFS: Fixes a bug where `read_attribute_direct` could write outside the attribute destination buffer.
    - `olen` can become negative and could be passed to `CopyMem`, which requires an unsigned length.
- Improves `SyncAPFS`
  * APFS Volume Groups can now be identified along with the earlier identified `Disk Roles`
  * This significantly improves determination of APFS Volume Types/Roles
  * Restrictions limiting some features to setups with only one APFS instance per container are now removed
  * This is a port of the downstream implementation by GitHub user @Joevt
- Amends Log Levels
  * LogLevel 0 remains as a native summary format
  * The previous upstream based four (4) log levels have been compressed to two (2) levels
  * LogLevel 4, which was not exposed by default, is now LogLevel 2, which is also not exposed by default.
  * LogLevel 2 is exposed when the `REFIT_DEBUG` build flag is set to two (2) at compilation time.
  * Unless LogLevel 2 is exposed when compiling, selected levels above one (1) will be capped at LogLevel 1
  * When LogLevel 2 is exposed, selected levels above two (2) will be capped at LogLevel 2
- Initial activation of fixes on Mac Recovery For MacOS 11 (Big Sur) and Later
  * IMPORTANT:
    - This implementation is still a work in progress ... feedback required/welcome


0.13.2.AK (07 Dec 2021):
-----------------------
- Adds `SupplyNVME` Feature
  * A built in NvmExpress driver is loaded by default to provide NVMe support if required
  * This functionality can be disabled by setting the `decline_nvmeload` token
  * With this feature, in addition to SupplyAPFS, firmware patching is no longer required on MacPro3,1 and XServe2,1
- Adds `ScreenRGB` Feature
  * Allows overriding the default background colour selection process
  * Users can now specify RGB values to be used instead
- Fixes Display of Mac Recovery Tool Name in RELEASE builds
  * The variable holding the Mac Recovery tool name was wrapped in `Debug` tags
  * Hence the tool name was not displayed in RELEASE builds
- Initial fixes on Mac Recovery For MacOS 11 (Big Sur) and Later
  * The Mac Recovery implementation inherited by RefindPlus was designed for the HFS+ filesystem
  * Hence, it does not recognise recovery volumes of MacOS versions with full APFS implementation
    - MacOS 10.13 (High Sierra) to MacOS 10.15 (Catalina) have partial/transitional APFS implementations
    - MacOS 11 (Big Sur) and newer have full APFS implementations
  * ADDITIONAL NOTES:
    - This implementation does not support setups with more than one APFS instance in a single container
    - This implementation is still a work in progress
- Fixes Compilation Issue on Recent GNU-EFI Versions
  * Synced with upstream update as well as an existing issue with `REFIT_CALL_X_WRAPPER`
  * GNU-EFI compilation of RefindPlus is likely broken overall
- Fixes `TagsHelp` Feature
  * Was inverted ... active when `decline_tagshelp` was set and vice versa after renaming the feature
  * This bug was introduced in v0.13.2.AH (Commit 1b043c3)
- Fixes Failure to Set Volume Badges and .VolumeIcon files on APFS Volumes
  * The items were skipped by optimisation meant to only skip such on APFS System Volumes for SyncAPFS
  * This bug was introduced in v0.13.2.AH (Commit d87d3fb)
- Fixes Memory Management
  * The `MyFreePool` function implementation did not actually free items passed
  * Similarly, the `ReleasePtr` function that called this was non operational
  * This affected the operation of various elements across the board
  * Both functions have now been consolidated into a new `MY_FREE_POOL` macro
  * This bug was introduced in v0.13.2.AD (Commit 65e5083)
- Fix BTRFS Filesystem Driver Build
  * The BTRFS filesystem driver had been excluded from RefindPlus builds from the start of the project
  * This was due to inherited issues with EDK2 builds of the driver ... [rEFInd Build Notes](https://github.com/dakanji/rEFInd/blob/54177c64768eed0ba56822f32cdfa279e97b8577/BUILDING.txt#L490-L495)
  * The build issues were resolved by GitHub User `joevt` and have been incorporated into RefindPlus
- Improves Time Bound Primed Buffer Mitigation
  * Mitigates against RefindPlus spontaneously running default items
  * Intervention is now based on a minumum 1.25 second interval between load and run attempt
  * Extended scope now covers MacOS again (previously removed)
- Improves `ProtectNVRAM` Implementation
  * Now ensures this is reset on each loop through the RefindPlus Main Loop
  * This ensures the filtering is not on if UEFI Windows boot fails
  * Only has cosmetic relevance but best practice
- Improves `Manage Firmware Boot Order` Implementation
  * Now confirms selected action before execution to minimise the chances of making unwanted changes
- Amends `ScaleUI` Implementation
  * Now checks the resolution of the longest and shortest sides for automatic scaling
  * Previously only checked the vertical resolution
  * This allows rotated screens to be properly accounted for
  * Some rare monitors, such as the 30` Apple Cinema Display, may be wrongly identified as HiDPI
  * This is because EDID information is not used at this time
  * However, the more common WQHD monitors are correctly identified as not being HiDPI monitors
  * Laptops with `Retina` screens should be correctly identified as having HiDPI monitors
- Amends Log Levels
  * The previous upstream based four (4) log levels have been compressed to three (3) levels
  * LogLevel 5, which was not exposed by default, is now LogLevel 4, which is not exposed by default.
  * LogLevel 4 is exposed when the `REFIT_DEBUG` build flag is set to two (2) at compilation time.
  * Unless LogLevel 4 is exposed when compiling, selected levels above three (3) will be capped at LogLevel 3
  * When LogLevel 4 is exposed, selected levels above four (4) will be capped at LogLevel 4


0.13.2.AJ (06 Oct 2021):
-----------------------
- Fixes PreBoot Volume Filtering in REL Builds
- Deactivates Log Level 5


0.13.2.AH (05 Oct 2021):
-----------------------
- Adds `PreferHiddenIcons` Feature
  * This functionality allows prioritising the use of `.VolumeIcon` image icons for loaders
- Adds Non-Standard UEFI 2.x Implementation Resilience
  * Some UEFI 2.x implementations may be incomplete with some functionality missing
  * This is typically due to customisation of the firmware as on Late Intel Macs such as the MacMini8,1
  * This affected running the DEBUG build on such units
  * RefindPlus now accommodates this situation.
- Adds Forced Shutdown on Secure Boot Setup Failure
  * RefindPlus will now shutdown if meant to use secure boot but this could not be set up
- Fixes Failure to Detect Linux Partitions
  * Linux partitions were not detected and therefore, could not be booted by RefindPlus
- Fixes Implicit Casting of Some Config Integers
  * Some config tokens that could take negative values such as `screensaver` were handled as Unsigned Integers
  * These are now correctly handled as Signed Integers
- Fixes Driver Loading from User Defined Folders
  * Drivers in folders defined by the `scan_driver_dirs` configuration token were not loaded in some instances
  * This was because the routine expected the defined paths to not include the installation folder path
  * This expectation was not specified however, meaning some users included the path in `scan_driver_dirs`
  * This expectation has now been removed and the installation folder path may or may not be included
- Fixes Switching External Screens to Text Mode
  * External screens switched to text mode were functional but elements, such as the header, were missing
  * This has now been fixed along with properly disabling the cursor
- Fixes Hang on Runtime Pauses
  * RefindPlus hung on runtime pauses initiated before the main menu was loaded
  * This was due to an absence of the Event Waitlist in such situations
  * The Waitlist is now always generated on runtime pauses if not present
- Fixes Static `PreviousBoot` Setup
  * The actually booted loader was not recorded if a tool had been run beforehand
  * Such previously set tools could only be changed by manually deleting the NVRAM entry
  * The intented outcome of having a static setup could not be realised as envisaged
  * This bug was introduced in v0.13.2.AG (Commit add53ba)
- Fixes Failure to set `PreviousBoot` on Text Mode Boots
  * The `PreviousBoot` variable was not saved when running loaders in text mode
  * This bug was introduced in v0.13.2.AA (Commit 74d70fb) and exposed in v0.13.2.AG (Commit 4590047)
- Fixes Graphics Mode Selection in Multi-GPU Setups
  * When more than one GPU is present, RefindPlus always tried to use the GOP instance from the last processed GPU
  * The GPU with a GOP instance having the highest resolution is now selected instead (as intended)
  * NB: RefindPlus does not check whether a GPU is actually connected to a display
    - Hence, a blank display will result if the highest resolution GPU is not connected
  * This bug was introduced in v0.12.0.AN (Commit 62e6fe8)
- Mitigates Text Mode Selected Menu Item Display
  * The selected item in text mode menus was not displayed
  * The selections had to be toggled to display the item
  * RefindPlus now works around this issue by automatically toggling such menu items
  * This toggling may however not happen on some units
- Improves Mac Recovery Tool Identification
  * RefindPlus now attempts to associate Apple Mac Recovery Tool instances to specific MacOS Volumes
  * The same generic name was previously used for all instances
  * This had made it difficult to know which volume a specific recovery instance applied to
- Improves Keystroke Flushing
  * Device errors are returned when attempting to read keystrokes under some conditions
  * This appears to typically only happen on UEFI PC
  * RefindPlus now further attempts to ensure the read takes place and/or mitigate the impact
- Improves APFS Volume Role Identification
  * APFS volume roles are now identified by their predefined `Disk Roles` when possible
  * Additionally, the `SyncAPFS` feature has been optimised for faster completion
- Improves APFS Partition Type Detection
  * RefindPlus Primarily used the Partition Type Guid to identify APFS Partitions
  * Some UEFI PC may however not provide a Partition Type Guid for APFS volumes
  * This affected the operation of the SyncAPFS feature which had to be disabled on such units
  * RefindPlus can now determine APFS partitions when the Partition Type Guid is not present
- Improves `PreviousBoot` Implementation
  * Only Loaders (Row 1 Items) are now saved as `PreviousBoot` when this is configured to be saved
  * Such Loaders are only saved after verification (not regardless as was the case)
- Improves `IgnorePreviousBoot` Implementation
  * This token is now enforced everywhere when set
  * Setting `+` under the `default_selection` token will therefore have no effect in such cases
  * NB: Setting `default_selection `+`` remains equivalent to commenting that token out
    - This default setting will continue to function as before
- Improves NVRAM Management
  * NVRAM Entries (Emulated and Hardware) are fully cleared before new entries are made
- Improves Graphics Mode Selection
  * Eliminates unnecessary iteration over UGA/GOP modes when only one UGA/GOP instance exists
  * This improves loading speed.
- Extends Memory Management Fixes
  * Additional memory management improvements
- Renames Misc Configuration Tokens
  * `ignore_volume_icns` to `ignore_hidden_icons`
  * The `decline_XYZ` format is now used for options to disable divergent defaults
    - `scan_other_esp` to `decline_espfilter`
    - `ignore_tag_help` to `decline_tagshelp`
    - `sync_apfs` to `decline_apfssync` (`SyncAPFS` is now active by default)
    - `supply_apfs` to `decline_apfsload` (`SupplyAPFS` is now active by default)
    - `silence_apfs` to `decline_apfsmute` (`SilenceAPFS` is now active by default)
    - `protect_nvram` to `decline_nvramprotect`  (`ProtectNVRAM` is now active by default)
    - `reload_gop` to `decline_reloadgop`  (`ReloadGOP` is now active by default)


0.13.2.AG (03 Aug 2021):
-----------------------
- Adds `TagHelp` Feature
  * Ensures HiddenTags can always be unhidden
  * This feature is active by default but can be disabled with the `disable_tag_help` token
- Fixes Banner Flicker During Load Sequence
  * Rationalises freeing the screen background image to reduce flickering at load time
  * Provides improved UX
- Fixes Filtering of Windows Secure Boot Certificates on Apple Firmware
  * Reverts Extension to Legacy Windows
  * This appeared to be linked to negative impacts on some Macs
- Fixes `IgnoreVolumeICNS` and `HideUI Badges` Implementation
  * Now extended to cover other volume types apart from `internal` volumes
- Fixes Handling of `FirmwareBootNum` Entries
  * These were not loaded as expected
- Fixes Hangs Resulting from Changed Device Handles
  * RefindPlus hung on return from third party tools that change device handles, such as GDisk
  * RefindPlus now manages this situation
- Fixes Invalid `Command Line Option Error` Notice on UEFI PC
  * Some UEFI PC appear to spontaneously generate invalid load options
  * These result in a halt and require one or more key presses to proceed
  * This bug was introduced in v0.12.0.AQ (Commit f5c438f)
- Fixes Booting into Legacy (BIOS) OS on UEFI PC
  * This bug was introduced in v0.13.2.AE (Commit b80f508)
- Fixes Hang When Selecting SubScreen Options
  * This bug was introduced in v0.13.2.AF (Commit 57280c3)
- Improves Volume Scanning Implementation
  * Improves speed generally by cutting self volume identification short once identified
  * Fixes Specific Implementation on UEFI PC
- Improves Tool Path Definitions
  * Extends fixes applied in v0.13.2.AF
- Improves `Sync_APFS` Implementation
  * Fixes memory allocation issues with `PreBoot` volume object separation
- Improves MacOS Volume Type Identification on UEFI PC
  * Several MacOS volume types, such as APFS, are now identified correctly on UEFI PC
  * These were previously `Unknown`
- Reduces Excessive Tool Validation Loops
  * Tools are now only checked for validity if they actually exist on disk
- Extends Manual Stanza Handling Fixes
  * Enhancements to `menuentry` sections applied to `submenuentry` sections
- Adopts Multiple Fixes and Enhancements from a Fork by GitHub User `joevt`
  * Mainly related to memory management
  * https://github.com/joevt/RefindPlus
- Amends `ActiveCSR` Implementation
  * Now only run when booting into MacOS, OpenCore or Clover
- Amends `ScanDelay` Implementation
  * Now immediately implemented after `SetupScreen` to allow for improved UX


0.13.2.AF (10 Jun 2021):
-----------------------
- Fixes Tool Path Definitions
  * Styling had introduced unwanted whitespace into tool paths
  * This bug was introduced in v0.13.2.AD (Commit 75d8357)
- Fixes Fix Manual Stanza Handling
  * Linux and `Firmware Reboot` stanzas were not handled properly
  * Fix applied to v0.13.2.AE did not fully resolve the issue
- Fixes BootKicker and CleanNvram Tool Loading
  * These tools were not loaded when located in some valid directories
  * This bug was introduced in v0.13.2.AE (Commit af1150d)
- Reverts HiddenItem Fix for Upstream Consistency
  * Prioritising consistency for upstream interoperability


0.13.2.AE (08 Jun 2021):
-----------------------
- Adds `NormaliseCSR` Feature
  * Filters out the `CSR_ALLOW_APPLE_INTERNAL` bit on Macs (for consumer use)
  * This facilitates `Over The Air` (OTA) updates when running MacOS v11.x (Big Sur)
  * This filtering works on earlier versions of MacOS which function as usual
- Improves Handling of CSR Policy Toggling
  * Adds option to clear CSR to facilitate `Over The Air` updates on MacOS v11.x (Big Sur)
  * Activated by entering `0` in place of `10` for the option to enable SIP
  * This setting is also valid when used on earlier versions of MacOS
- Improves Upstream Logging Format
  * Formatted for clarity
- Improves Handling of Manual Stanza Icons
  * Optimises search for associated icons to speed loading times up
  * Only undertakes a second search scan when required
- Improves Selection Image Handling
  * Only calls scaling function when required
- Improves Embedded Image Creation Script
  * Previously updated for Python 3
  * Now updated to be run from any directory
- Updates Default Banner Background Colour
  * Now set at 191,191,191 RGB to better match the default grey
- Aligns Driver and Tools Folders with Upstream
  * Drops `{ARCH}_drivers` and `{ARCH}_tools` folders for upstream consistency
- Fixes Default Opaque Setting
  * Images meant to default to `opaque` were set to `transparent` instead.
  * This bug was introduced in v0.13.2.AD (Commit 0edf341)
- Fixes Windows Boot UEFI Variable Handling
  * Windows Boot UEFI Variables were not handled properly on Apple firmware
  * This resulted in an inability to boot into Windows on Macs
- Fixes Manual Stanza Handling
  * Linux and `Firmware Reboot` stanzas were not handled properly
- Fixes HiddenItem Handling
  * Hidden items could not be created or managed
- Changes Token Name for Internal Consistency
  * `suppress_verbose_apfs` to `silence_apfs`


0.13.2.AD (04 May 2021):
-----------------------
- Fixes Memory Management Issues
  * Misc issues mainly introduced in v0.13.2.AA
  * Passes `MyFreePool` pointer params by reference to ensure they can be set to a NULL value
- Fixes HiddenLegacy Handling
  * HiddenLegacy tags were not being handled when scanning for bootloaders
  * This bug was introduced in v0.13.2.AA (Commit bda56bf8)
- Fixes `DisplaySimpleMessage`
  * Messages were not actually being displayed
  * This bug was introduced in v0.13.2.AA (Commit 183e83e)
- Fixes *.icns Transparency
  * The Alpha Channel was defaulting to opaque black
  * This bug was introduced in v0.13.2.AA (Commit de49af5)
- Improves Upstream Logging Format and Coverage
  * Formatted for better readability and incorporates more key items from the native format
- Improves `ReloadGOP` Implementation
  * Generally updated and optimised
- Improves Volume Type Identification
  * Optical disc drives identified and assumption for network volumes
- Improves Detection of Previously Set NVRAM Variables
  * This helps further reduce unnecessary NVRAM writes
- Adds `IgnoreVolumeICNS`  Feature
  * Speeds booting up by not scanning for `.VolumeIcons.icns` files (not typically used)


0.13.2.AC (12 Apr 2021):
-----------------------
- Fixes memory allocation bug
  * Program hangs when `fold_linux_kernels` is active and Linux instances with multiple kernels are present
  * This bug was introduced in v0.13.2.AA (Commit 68c7af0)
- Fixes volume badge icon detection bug
  * `.VolumeIcon` files were not being detected as meant to be
  * This bug was introduced in v0.13.2.AA (Commit 4bd2f6c)
- Improves Upstream Logging Format and Coverage
  * Formatted for better readability and incorporates key items from the native format


0.13.2.AB (09 Apr 2021):
-----------------------
- Corrects Notes on `fold_linux_kernels` in the Configuration File
  * The default setting is active and not disabled as was documented
- Fixes bug resulting in the output log level being one step below the configured value
  * This bug was introduced in v0.13.2.AA (Commit eeb00c1)
- Fixes memory allocation bug resulting in the program hanging
  * This bug was introduced in v0.13.2.AA (Commit 9307d38)
- Other misc fixes
  * Logging and icon selection improvements


0.13.2.AA (06 Apr 2021):
-----------------------
- Syncs with Upstream Post v0.13.2 Updates
  * Minimises Reading of `HiddenTools` Variable
  * Fixes Menu Keystroke Event
    Could cause RefindPlus to hang when processing keystrokes in menus
- Syncs with Upstream v0.13.2
  * Misc Improvements (Skips items already implemented in RefindPlus)
  * Does not adopt upstream changes to non-volatile variable storage
  * Identifies JFS volumes if a third-party JFS driver is installed
  * Improves separation of filesystem name vs. partition name internally
  * Applies extensive memory management improvements
- Fixes Ignoring the Upstream `max` Resolution Setting
  * The setting was previously not ignored as was intended
- Fixes Potential Memory Corruption Issues in the Ext2, Ext4 and HFS Drivers
  * Users should change earlier versions of these drivers for current ones
  * Copies available after building RefindPlus
  * The versions available upstream after the v0.13.1 releases were also improved
  * Additional improvements made to these drivers as well as to the NTFS driver in RefindPlus
- Fixes a bug that corrupted the ConsoleOut handle on booting UEFI Loaders when running GPUs with Mac EFI
  * This bug was introduced in v0.12.0.AN (Commit 8d5e4e3)
- Fixes a bug that caused the option to return from folded Linux kernel submenus not to appear.
  * This bug was introduced in Upstream v0.9.0
- Fixes Repeated Icon Scaling on HiDPI Monitors
  * Icons on HiDPI monitors were repeatedly scaled up on each return to the main screen from external screens
  * This bug was introduced in Upstream v0.10.3
- Fixes Multiple Code Quality Issues
  * Fixes several issues identified by static analysis of the code base
  * Multiple issues of undetermined provenance and age
- Corrects Default Timeout Setting
  * Was previously set to 20 seconds and not disabled as documented
- Drops Switch to Graphics Mode on EFI Boot (When not Booting OpenCore)
  * Maintains default mode instead of switching to graphics mode when booting EFI loaders such as OpenCore
- Improves APFS Remapping
  * Previously failed when using the `RescanAll` feature or when not running on Apple Firmware
  * Improves volume filtering
- Improves Device Handle Connection
  * Now always runs the connection process a minimum of two (2) times
    This is because several links are only revealed after a first pass
  * Trades a typically imperceptible increase in boot time for improved stability and reliability
    NB: The first pass is silent and is not logged
- Adds `reinstall_gop` as Configuration Option
  * This allows switching the `Reinstall GOP from RAM` Feature, introduced in v0.12.0.AM,
    `ON` or `OFF` in the configuration file. Default is `OFF`
- Now Specfically Logs Booting Clover Instances
  * Now separately identifies Clover instances in the debug log when these are booted
- Changes Misc Token Names for Internal Consistency or to better reflect function
  * `disable_mac_compat_check` to `disable_compat_check`
  * `set_mac_boot_args` to `set_boot_args`
  * `protect_mac_nvram` to `protect_nvram`
  * `reinforce_apfs` to `sync_apfs`
- Implements Upstream `firmware_bootnum` manual stanzas (Skipped in v0.13.1.AA)
  * Misc fixes appear to have resolved previously experienced issues
- Adds `active_csr` config token to allow implementing a CSR policy
  * Allows ensuring a particular CSR policy is always actively implemented
  * Previously passively left whatever was previously set unchanged.
- Always Activates Certificate Write Prevention on Windows
  * Now always activated on Windows boot regardless of whether Legacy or UEFI Windows is detected
- Adds OpenCore and Clover to `use_graphics_for`
  * The default screen mode on booting these boot loaders can now be set to graphics mode.
- Incorporates a Variant of the Upstream Logging
  * Combines an equivalent of the upstream logging feature with the existing logging.
  * The previously disabled `log_level` configuration token can now take a numeric log level
    (0 to 4), with levels 1 to 4 giving increasing levels of detail.
  * Different to the upstream implementation, this feature is only available on DEBUG builds and as such,
    Level 0 does not disable the feature but activates the original logging form (logs some unique items).


0.13.1.AB (02 Mar 2021):
-----------------------
- Fixes APFS ReMapping
  * APFS Containers were not excluded as should have been the case
- Fixes Hour Logging
  * Deviation from GetTime spec meant some log files were not in chronological order


0.13.1.AA (02 Mar 2021):
-----------------------
- Syncs with Upstream Post v0.13.1 Updates
  * Adds icon for Manjaro Linux
- Syncs with Upstream v0.13.1
  * Fixes bug that can cause issues with disabled manual boot stanza referencing unreadable volumes
  * Accounts for new upstream initial logging function (ignored by RefindPlus)
  * Records selected EFI-based reboot options in the PreviousBoot variable
  * Implements support for setting systemd`s LoaderDevicePartUUID UEFI variable
  * Re-interpretes partial icon scaling fix implemented upstream
- Syncs with Upstream v0.13.0
  * Limited to items that did not originate from RefindPlus (which are kept in their original form)
  * Does not adopt upstream reinterpretation of RefindPlus graphics protocol detection
  * This was implemented upstream in a new `MyLibLocateProtocol` function
  * Maintains the maximum available screen resolution as the default screen resolution
  * Selected resolutions larger than screen size reported as possibility upstream have not been observed so far
  * To be borne in mind for changes if such reports are received
  * Still accepts upstream config files including the new `Max` resolution option (which is disregarded)
  * All other upstream options incorporated including rebooting into firmware efi and the new manual stanza options
  * Does not implement `firmware_bootnum` manual stanzas dues to reliability issues
- Fixes Potential GNU-EFI Build Failure (Partial)
  * The feature that provides Strict UEFI 2.x GOP has only ever worked on versions compiled with Tianocore.
  * Now takes steps to prevent build failures on GNUEFI which might not find linked Tianocore resources.
- No Longer Saves RefindPlus Settings to Hardware NVRAM When Not Explicitly Set
  * Previously saved settings to Hardware NVRAM when Emulated NVRAM was not writable
  * This condition affected HFS+ setups and was implemented to help such users out
  * Now, the setting will simply not be saved in such instances
  * A debug log item will inform users that the setting was not saved
- Improves OpenProtocol and HandleProtocol Mapping
  * Fixes potential race condition in mapping structure
  * Discards superflous variables
- Fixes Several Memory Management Issues
  * These had largely been introduced after the v0.12.0.AN Release
  * One outcome had been a failure to run on some units
- Adds `ReinforceAPFS` Feature
  * Allows booting MacOS Big Sur when SIP is disabled.
  * Allows booting FileVault encrypted volumes directly.
- Attempts to Avoid Hardware NVRAM Writes of Unchanged Variables
  * Now compares new variables with existing NVRAM variables and does not write if already present.
- Adds the `IgnorePreviousBoot` Feature
  * Provides option not to always save the name of the previously booted loader
- Limits `AllowDuplicates` feature to ESPs
  * This feature now only applies to ESPs.
- Changes `enforce_apfs` Config Option to `reinforce_apfs`
  * More accurately describes functionality
- Changes `allow_duplicates` Config Option to `scan_other_esp`
  * Reflects change of scope
- Changes `trim_force` Config Option Back to `force_trim`
  * This more accurately reflects the action taken
- Adds System Info Logging
  * Based on reinterpretation of upstream additions
- Modified `EfivarSetRaw` to match upstream changes that better align this with RefindPlus
  * Now only saves variables when not currently existing or do not match new values.
  * This is intended to reduce wear and tear on NVRAM storage.
  * Exisiting measures taken in RefindPlus such as `ignore_previous_boot` remain.


0.12.0.AQ (03 Feb 2021):
-----------------------
- Fixes Volume Scanning Bug
  * Volumes were not scanned for boot loaders if at least one user provided driver was not present
  * This bug appeared in v0.12.0.AM
- Fixes Hidden Items Bug
  * Tags and Tools could not be hidden and those hidden could not be managed
  * This bug appeared in v0.12.0.AP


0.12.0.AP (02 Feb 2021):
-----------------------
- Misc Improvements to CSR Configuration Options
- Misc Improvements to Limit Memory Leaks
- Renames `force_trim` Config Option to `trim_force`
- Adds `SupplyAPFS` Feature
  * This eliminates the need for manually adding APFS drivers when APFS is not supported
- Adds `SuppressVerboseAPFS` Feature
  * This suppresses the scrolling loading text that appears when loading APFS drivers
  * Provided as a separate item as its action may impact other text output
- Adds `AllowDuplicates` Feature
  * This allows scanning of partitions with duplicate filesystem UUIDs if required
- Fixes Default Legacy UEFI Scan Types
- Fixes Boot Loading Screen Interface on all Units
  * Allows Boot Loading Screen such as the Mac Stage 1 Loading Screen to display correctly
  * This had been unknowing fixed on MacPro5,1 units earlier and now extended to all units
  * Hence, `OsxAptioFix` drivers are no longer required on Macs and are actively discouraged
- Fixes Device Handle Connection Bug
  * Device handles were not connected if at least one user provided driver was not present
  * This resulted in GOP not not being acquired/provided from RAM when required in such instances
  * This bug appeared in v0.12.0.AM
- Fixes Permitted Qemu Memory Leak Wokaround Bug
  * A permitted memory leak supposed to be limited to Qemu had been applied to all users
  * Additionally, the scope was larger than required
  * This bug appeared in v0.12.0.AM


0.12.0.AN (04 Jan 2021):
-----------------------
- Adds `EXT4_FEATURE_INCOMPAT_ENCRYPT` Support to Ext4 Driver
- Maps deprecated `HandleProtocol` calls to `OpenProtocol`
- Drops ineffective attempt to detect timezones
- Fixes issue with disappearing Mouse on x64 Arch
- Fixes Bogus Bootable Windows BIOS Instances
- Changes default config filename to config.conf
  * Retains support for refind.conf
- Loads `OsxAptioFix` driver on OpenCore Boots if required and available
  * Enables the Stage 1 Loading Screen on some Classic Macs
- Fixes ESP detection for saving screenshots
  * ESP detection may have sometimes returned `true` on other locations
- Implements `force_trim` config option
  * Enables `TRIM` on non-Apple SSDs when booting into MacOS
- Implements `disable_mac_compat_check` config option
  * Disables MacOS compatibility checks to allow booting new MacOS Versions on unsupported Macs
- Implements `disable_amfi` config option
  * Disables the Apple Mobile File Integrity (AMFI) checks in MacOS
  * Disabling AMFI may further facilitate booting new MacOS Versions on unsupported Macs
- Implements `protect_mac_nvram` config option
  * Prevents UEFI Windows from saving certificates to the NVRAM on Macs
  * These certificates damage Apple NVRAM and result in an inability to start Macs up
- Implements `set_mac_boot_args` config option
  * Allows setting arbitrary boot arguments on MacOS


0.12.0.AM (07 Dec 2020):
-----------------------
- Optimises search for graphics capabilities and overall boot speed
- Adds workaround for broken QEMU support in the upstream v0.12.0 release
- Reinstalls GOP from Random Access Memory to provide bootscreen on EFI 1.x devices such as Classic MacPros when running GPUs with strict UEFI 2.x Implementation (Mainly Nvidia)
  * Hence RefindPlus can now provide bootscreen when running any GPU with GOP
  * The bootscreen will also be available to other tools, such as OpenCore, when chain-loaded from RefindPlus.
- Clears buffered key strokes on main menu
  * This prevents immediately booting into a selected option on return from tools such as the UEFI Shell
- Encodes screenshots as PNG files instead of the previous large BMP files
- Save screenshots to the RefindPlus ESP when RefindPlus is run from an ESP
  * Previously saved to the first ESP found which could be a different ESP
  * This ensures screeshots are saved to the same ESP RefindPlus is located in
  * Still saves to the first ESP found when run from HFS+ or other `Non-FAT` directories
- Changes logged device handle indices to hex
  * Displays actual hex indices to permit consistency with shell tools
- Changes HiDPI monitor detection threshold to QHD vertical dimension (1601px)
  * Previous threshold of 1921px on the horizontal mistook WQHD for HiDPI
- Adds `scale_ui` config token to allow flexibility in HiDPI detection
  * HiDPI monitor detection can be switched on/off or automatically detected by using this token
- Embeds Bootscreen and Nvram icons
  * Specfic icons will be displayed instead of a generic icon when activated and actual icons are not found


0.12.0.AL (03 Nov 2020):
-----------------------
- Fixes Regression on Console GOP Provision on MacPro5,1


0.12.0.AK (02 Nov 2020):
-----------------------
- Fixes `Write Protected` error (USB Mode)
- Uses Largest UGA Resolution found on GPU Handles
- Fixes UGA Fallback when GOP is not found
- Finetunes Direct GOP Renderer Handling
- Switches Direct GOP Renderer off by default
- Customises Tool and Driver Paths
- Misc Optimisation
  * Misc coding intervention


0.12.0.AJ (05 Oct 2020):
-----------------------
- Fixes on-screen notices
- Debug log improvements
  * Optimises Bootlog routines
  * Provides different log files per login and no longer places all logs in one file
  * Itemises found bootloaders
  * Discarded superfluous log items
  * Logs screensaver
  * Logs details of found Bootloaders
- Optimises device connection routines
- Increase Keyboard Shortcut Keys to cover 10 Bootloaders
- Enhances screensaver function
- Improves Direct GOP Renderer Implementation
- General Stability Fixes


0.12.0.AH (07 Sep 2020):
-----------------------
- Rebrands `Refind-GOPFix` as `RefindPlus`
  * This is to reflect wider scope of interventions beyond fixing GOP Screens
- Restores on-screen notices on Apple Firmware
  * This fixes a long standing rEFInd bug that meant most on-screen notices could not be displayed on Macs
- Implements `ContinueOnWarning` config option
  * This allows users to set RefindPlus to automatically proceed after waiting for a while on screen notices
- Fixes UGAPassThrough Feature
  * The UGAPassThrough feature was sometimes not activated
- Handles Invalid GOP Instances
  * Validates GOP Instances before providing console GOP
- Optimises Device Handle Connection
  * Improve connection reliability as well as boot speed
- Misc Optimisation
  * Removes more redundant wrapper calls
  * Improves logging scope and presentation
  * General look and feel improvements
  * Misc coding intervention


0.12.0.AG (11 Aug 2020):
-----------------------
- Fixes Bug that Removed UGA Support and Disabled the Boot Screen on Legacy Fully Compatible GPUs
  * This bug appeared in v0.12.0.B
- Implements BootKicker Feature from OpenCore
  * This allows loading the Apple Boot Screen directly from Refind which may be
    useful in getting the environment for full EFI Shell support.
  * Requires GOP Capable Fully Compatible GPUs
- Implements Clean NVRAM Feature from OpenCore
  * Allows resetting the NVRAM Directly from Refind
- Improves Direct GOP Renderer Implementation
- Expands and Improves Debug Logging


0.12.0.AF (07 Aug 2020):
-----------------------
- Misc Performance Optimisation
- Expands Debug Logging Coverage
- Implements Direct GOP Renderer from OpenCore
- Changes Default `text_renderer` Status to FALSE
- Forces `text_renderer` Configuration Setting to `True` on Switch To Text
- Permits Running EFI Shell from `BOOT/tools_x64` folder
- Permits Running Memtest from standard locations
- Permits using `Memtest.efi` filename in addition to existing `Memtest86.efi`


0.12.0.AE (04 Aug 2020):
------------------------
- Fixes GOP Selection Bug Introduced in v0.12.0.D


0.12.0.AD (04 Aug 2020):
-----------------------
- Fixes Debug Output Issues from v0.12.0.C
- Expands Debug Log Coverage
- Adds `text_renderer` as Configuration Option
  * This allows switching the TextRenderer Feature, introduced in v0.12.0.C,
    `ON` or `OFF` in the configuration file. Default is `ON`
- Adds `uga_pass_through` as Configuration Option
  * This allows switching the UGAPassThrough` Feature, introduced in v0.12.0.C,
    `ON` or `OFF` in the configuration file. Default is `ON`
- Adds `provide_console_gop` as Configuration Option
  * This allows switching the ProvideConsoleGOP` Feature, introduced in v0.12.0.C,
    `ON` or `OFF` in the configuration file. Default is `ON`
- Optimises libeg/screen.c by removing redundant wrapper calls from libeg/screen.c
  * Various function calls were previously routed through a wrapper but can be
    called directly instead to save on processing cycles
- Broadens the scope of the search for available Graphics Protocols
  * This reduces false negatives when locating GOP, UGA and ConsoleControl.


0.12.0.AC (03 Aug 2020):
-----------------------
- Implements ProvideConsoleGOP from OpenCore
  * This allows Pre-Boot Configuration Screens (Boot Screen) on units with broken
    GOP Implementation (such as Classic MacPro 4,1 and 5,1 Models) when running Semi Compatible GPUs.
  * Units such as the Classic MacPro 3,1 Models running Semi Compatible GPUs
    can still display Boot Screens as before.
- Implements UGAPassThrough from OpenCore
  * This allows Boot Screen on Operating Systems such as MacOS v10.4 (Tiger) that use old EFIBoot processes
- Implements BuiltinText Renderer from OpenCore
  * This fixes Text Mode on units with broken text display implementations such as Classic MacPros.
  * This allows running EFI Shell on such units.
- Includes all MacOS SIP Values for CSR Rotation (Thanks, Github User @startergo)
  * This implements the actual MacOS default value of 877 in place of the previously defined value of 77.
  * This allows disabling SIP on, and booting with caveats, pre-release versions of MacOS v11.x (Big Sur)
- Expands Debug Logging
- Improves Boot Speed


0.12.0.AB (19 Jul 2020):
-----------------------
- Adds debug version
- Expands GOPFix to Classic MacPro 4,1 and 5,1 Models
- Should also show the Refind boot screen on non-Mac units running modern AMD GPUs such as the RX580
- Enables UGA if GOP is not found in case supported


0.12.0.AA (18 Jul 2020):
-----------------------
- Shows boot screen on Classic MacPro 3,1 Models running Semi Compatible GPUs
  (Compatible GPUs without Mac EFI)
- Does not yet apply to Classic MacPro 4,1 or 5,1 Models
- Does not include Debug Version
